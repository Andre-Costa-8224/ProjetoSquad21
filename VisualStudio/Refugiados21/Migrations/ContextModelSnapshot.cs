// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Refugiados1.Models;

#nullable disable

namespace Refugiados1.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Refugiados1.Models.AtenderDadiva", b =>
                {
                    b.Property<int>("IdAtender")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAtender"), 1L, 1);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdDadiva")
                        .HasColumnType("int");

                    b.Property<int>("IdOng")
                        .HasColumnType("int");

                    b.Property<string>("Seu_Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAtender");

                    b.HasIndex("IdDadiva");

                    b.ToTable("AtenderDadiva");
                });

            modelBuilder.Entity("Refugiados1.Models.CriarDadiva", b =>
                {
                    b.Property<int>("IdCriarDadiva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCriarDadiva"), 1L, 1);

                    b.Property<string>("Dadiva")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCriarDadiva");

                    b.ToTable("CriarDadiva");
                });

            modelBuilder.Entity("Refugiados1.Models.EscolherDadiva", b =>
                {
                    b.Property<int>("IdEscolherDadiva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEscolherDadiva"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereço")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCriarDadiva")
                        .HasColumnType("int");

                    b.Property<int>("IdNome")
                        .HasColumnType("int");

                    b.Property<string>("Ong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEscolherDadiva");

                    b.HasIndex("IdCriarDadiva");

                    b.ToTable("EscolherDadiva");
                });

            modelBuilder.Entity("Refugiados1.Models.SolicitarDadiva", b =>
                {
                    b.Property<int>("IdDadiva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDadiva"), 1L, 1);

                    b.Property<string>("Dádiva")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereço")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDadiva");

                    b.ToTable("SolicitarDadiva");
                });

            modelBuilder.Entity("Refugiados1.Models.AtenderDadiva", b =>
                {
                    b.HasOne("Refugiados1.Models.SolicitarDadiva", "SolicitarDadiva")
                        .WithMany("AtenderDadiva")
                        .HasForeignKey("IdDadiva")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SolicitarDadiva");
                });

            modelBuilder.Entity("Refugiados1.Models.EscolherDadiva", b =>
                {
                    b.HasOne("Refugiados1.Models.CriarDadiva", "CriarDadiva")
                        .WithMany("EscolherDadiva")
                        .HasForeignKey("IdCriarDadiva")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CriarDadiva");
                });

            modelBuilder.Entity("Refugiados1.Models.CriarDadiva", b =>
                {
                    b.Navigation("EscolherDadiva");
                });

            modelBuilder.Entity("Refugiados1.Models.SolicitarDadiva", b =>
                {
                    b.Navigation("AtenderDadiva");
                });
#pragma warning restore 612, 618
        }
    }
}
